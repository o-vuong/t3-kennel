version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kennel-postgres
    environment:
      POSTGRES_DB: kennel_management
      POSTGRES_USER: kennel_user
      POSTGRES_PASSWORD: kennel_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kennel_user -d kennel_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: kennel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kennel Management Application
  app:
    build: .
    container_name: kennel-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://kennel_user:kennel_password@postgres:5432/kennel_management
      - REDIS_URL=redis://redis:6379
      - BETTER_AUTH_SECRET=your-32-character-secret-key-here
      - BETTER_AUTH_URL=http://localhost:3000
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_BETTER_AUTH_URL=http://localhost:3000
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
      - ENCRYPTION_KEY=your-32-character-encryption-key-here
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
